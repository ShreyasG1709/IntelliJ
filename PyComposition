class Tires:
    def __init__(self, size):
        self.size = size
        self.pressure = 30  # Default pressure

    def get_pressure(self):
        return self.pressure

    def pump(self):
        self.pressure += 5
        print(f"Pumped tires to {self.pressure} psi")

class Engine:
    def __init__(self, fuel_type):
        self.fuel_type = fuel_type
        self.state = "stopped"

    def start(self):
        self.state = "running"
        print(f"{self.fuel_type.capitalize()} engine started")

    def stop(self):
        self.state = "stopped"
        print(f"{self.fuel_type.capitalize()} engine stopped")

    def get_state(self):
        return self.state

class Vehicle:
    def __init__(self, VIN, engine, tires):
        self.VIN = VIN
        self.engine = engine
        self.tires = tires

# Create tire sets
city_tires = Tires(size=15)
off_road_tires = Tires(size=18)

# Create engines
electric_engine = Engine(fuel_type="electric")
petrol_engine = Engine(fuel_type="petrol")

# Instantiate vehicles
city_car = Vehicle(VIN="1HGBH41JXMN109186", engine=electric_engine, tires=city_tires)
all_terrain_car = Vehicle(VIN="1HGBH41JXMN109187", engine=petrol_engine, tires=off_road_tires)

# Play with the cars
# City Car interactions
print("\nCity Car interactions:")
print(f"City car engine state: {city_car.engine.get_state()}")
city_car.engine.start()
print(f"City car engine state: {city_car.engine.get_state()}")
print(f"City car tire pressure: {city_car.tires.get_pressure()}")
city_car.tires.pump()

# All-Terrain Car interactions
print("\nAll-Terrain Car interactions:")
print(f"All-terrain car engine state: {all_terrain_car.engine.get_state()}")
all_terrain_car.engine.start()
print(f"All-terrain car engine state: {all_terrain_car.engine.get_state()}")
print(f"All-terrain car tire pressure: {all_terrain_car.tires.get_pressure()}")
all_terrain_car.tires.pump()
